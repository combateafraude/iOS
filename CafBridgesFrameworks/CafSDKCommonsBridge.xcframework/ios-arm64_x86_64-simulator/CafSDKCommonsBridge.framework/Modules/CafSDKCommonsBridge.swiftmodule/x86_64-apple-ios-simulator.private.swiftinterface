// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
// swift-module-flags: -target x86_64-apple-ios13.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name CafSDKCommonsBridge
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
import CafSDK
import Foundation
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public struct CafSDKCommonsBridgeInstance {
  public let cafSdkConfiguration: CafSDK.CafSDKConfiguration
  public let mobileToken: Swift.String
  public let personId: Swift.String
  public let environment: CafSDK.CafEnvironment
  public init(cafSdkConfiguration: CafSDK.CafSDKConfiguration, mobileToken: Swift.String, personId: Swift.String, environment: CafSDK.CafEnvironment)
}
@_hasMissingDesignatedInitializers public class CafImageLoader {
  public static func loadImageAsync(from urlString: Swift.String, completion: @escaping (UIKit.UIImage?) -> Swift.Void)
  public static func loadImageSync(from urlString: Swift.String) -> UIKit.UIImage?
  public static func loadImageWithFallback(from urlString: Swift.String, completion: @escaping (UIKit.UIImage?) -> Swift.Void)
  @objc deinit
}
@_hasMissingDesignatedInitializers public class CafSDKCommonsBridgeMain {
  public static func initialize(jsonString: Swift.String) -> CafSDKCommonsBridge.CafSDKCommonsBridgeInstance
  public static func getInstance() -> CafSDKCommonsBridge.CafSDKCommonsBridgeInstance
  public static func release()
  @objc deinit
}
public struct CafImageParser {
  public static func loadImage(from imageUrlString: Swift.String?, completion: @escaping (UIKit.UIImage?) -> Swift.Void)
  public static func loadImageSync(from imageUrlString: Swift.String?) -> UIKit.UIImage?
  public static func isRemoteURL(_ urlString: Swift.String) -> Swift.Bool
  public static func isLocalURL(_ urlString: Swift.String) -> Swift.Bool
  public static func loadMultipleImages(from imageUrls: [Swift.String?], completion: @escaping ([UIKit.UIImage?]) -> Swift.Void)
}
